apiVersion: appdynamics.com/v1alpha1
kind: Clusteragent
metadata:
  name: k8s-cluster-agent
  namespace: {{ .Release.Namespace }}
spec:
  controllerUrl: https://{{ .Values.appd_controller_hostname }}:443
  account: {{ .Values.appd_account_name }}
  appName: {{ .Values.appname }}
  proxyUrl: {{ .Values.proxy_url }}
  serviceAccountName: appdynamics-cluster-agent
  logLevel: "INFO"
  image: "docker.io/appdynamics/cluster-agent:20.10.0" #20.11.0
  imageInfo:
    dotnetcore:
      agentMountPath: /opt/appdynamics
      image: docker.io/appdynamics/dotnet-core-agent:latest
      imagePullPolicy: IfNotPresent
    java:
      agentMountPath: /opt/appdynamics
      image: docker.io/appdynamics/java-agent:latest
      imagePullPolicy: IfNotPresent
    nodejs:
      agentMountPath: /opt/appdynamics
      image: docker.io/appdynamics/nodejs-agent:20.8.0-stretch-slimv10
      imagePullPolicy: IfNotPresent
  instrumentContainer: first
  stdoutLogging: "true"
  #eventUploadInterval: 8
  #containerRegistrationInterval: 100
  #clusterMetricsSyncInterval: 50
  #metadataSyncInterval: 50
  #containerBatchSize: 8
  #podBatchSize: 10
  nsToMonitor: {{ .Values.ns_to_monitor }}
  instrumentationMethod: Env
  instrumentationRules:
    - namespaceRegex: world
      appName: {{ .Values.appname }}
      language: java
      imageInfo:
        image: "docker.io/appdynamics/java-agent:20.9.0"
        agentMountPath: /opt/appdynamics
        imagePullPolicy: "IfNotPresent"
  nsToInstrumentRegex: "{{ .Values.ns_to_instrument }}"
  appNameStrategy: manual
  defaultAppname: "{{ .Values.appname }}"
#  instrumentationMethod: Env
#  nsToInstrumentRegex: "default"
#  appNameStrategy: "label"
#  appNameLabel: "appd-appname"
---
apiVersion: appdynamics.com/v1alpha1
kind: InfraViz
metadata:
  name: appd-infraviz
  namespace: {{ .Release.Namespace }}
spec:
  controllerUrl: https://{{ .Values.appd_controller_hostname }}:443
  image: {{ .Values.registry }}/appd-nodeagent:v1
  account: {{ .Values.appd_account_name }}
  globalAccount: {{ .Values.appd_global_account }}
  netVizPort: 3892
  enableServerViz: "true"
  enableDockerViz: "true"
  enableMasters: true
  stdoutLogging: false
  uniqueHostId: spec.nodeName
  {{- if .Values.proxy_url }}
  proxyUrl: {{ .Values.proxy_url }}
  {{- end }}
